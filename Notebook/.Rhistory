data <- swiss
a0 <- 1
s0 <- 1
m0 <- matrix(0,ncol=1,nrow=6)
B0 <- diag(1,ncol=6,nrow=6)
gaussian.posterior <- function(data,m0,s0,a0,B0){
xbar <- as.matrix(colMeans(data))
S <- cov(swiss)
n <- nrow(swiss)
p <- ncol(swiss)
# Posterior hiperparameters
sn <- s0 + n
an <- a0 + n/2
mn <- (s0*m0 + n*xbar)/sn
Bn <- B0 + (n/2)*(S + (s0/sn)*(xbar-m0)%*%t(xbar-m0))
# Output
output <- list(mn,sn,an,Bn)
return(output)
}
output <- gaussian.posterior(data,m0,s0,a0,B0)
M <- 10000
mu.sim <- matrix(NA,nrow=M, ncol=ncol(data))
Lambda.sim <- array(NA,dim=c(M,ncol(data),ncol(data)))
e.sim <- matrix(NA,nrow=M, ncol=ncol(data))
V.sim <- array(NA,dim=c(M,ncol(data),ncol(data)))
C.sim <- array(NA,dim=c(M,nrow(data),ncol(data)))
m <- 1; X <- as.matrix(data)
for(m in 1:M){
# Simulacion (mu,Lambda)
Lambda.sim[m,,] <- rWishart(1, output[[3]], output[[4]])
mu.sim[m,] <- mvrnorm(1, mu=output[[1]], Sigma=solve(output[[2]]*Lambda.sim[m,,]), tol = 1e-6)
# Simulacion (e,V) + C
eigen_aux <- eigen(solve(Lambda.sim[m,,]))
e.sim[m,] <- eigen_aux$values
V.sim[m,,] <- eigen_aux$vectors
C.sim[m,,] <- X %*% V.sim[m,,]
}
if(!require("tidyverse")){install.packages("tidyverse")}
if(!require("readr")){install.packages("readr")}
if(!require("psych")){install.packages("psych")}
library("tidyverse")
library("readr")
library("psych")
data("swiss")
swiss.pca <- prcomp(swiss, scale. = TRUE)
summary(swiss.pca)
ls(swiss.pca)
if (require("mvtnorm") == FALSE){
install.packages("mvtnorm")
}
if (require("MASS") == FALSE){
install.packages("mvtnorm")
}
library("mvtnorm","MASS")
M <- 10000
mu.sim <- matrix(NA,nrow=M, ncol=ncol(data))
Lambda.sim <- array(NA,dim=c(M,ncol(data),ncol(data)))
e.sim <- matrix(NA,nrow=M, ncol=ncol(data))
V.sim <- array(NA,dim=c(M,ncol(data),ncol(data)))
C.sim <- array(NA,dim=c(M,nrow(data),ncol(data)))
m <- 1; X <- as.matrix(data)
for(m in 1:M){
# Simulacion (mu,Lambda)
Lambda.sim[m,,] <- rWishart(1, output[[3]], output[[4]])
mu.sim[m,] <- mvrnorm(1, mu=output[[1]], Sigma=solve(output[[2]]*Lambda.sim[m,,]), tol = 1e-6)
# Simulacion (e,V) + C
eigen_aux <- eigen(solve(Lambda.sim[m,,]))
e.sim[m,] <- eigen_aux$values
V.sim[m,,] <- eigen_aux$vectors
C.sim[m,,] <- X %*% V.sim[m,,]
}
hist(e.sim[,2])
summary(e.sim[,2])
hist(C.sim[,1,2])
